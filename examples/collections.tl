
;; VECTORS
;; (def v [])
;; (print (len v))
;; (print (type-of v))
;; (print (eq (type-of v) "vector"))
;; (ins v 1 2 3 4)
;; (print v)
;; (ins-at v 0 4)
;; (print v)
;; (print (get v 2))
;; (rem-at v 2)
;; (print (get v 2))
;; (rem v 0)
;; (print v)

;; DICTS
;; (def d #("john" "kate" "jackie" "jensen"))
;; (print d)
;; (print (len d))
;; (print (type-of d))
;; (print (get d "john"))
;; (print (get d "jackie"))
;; (ins d "Marry" "Oslow" "nate" 4 )
;; (print d)
;; (rem d "Marry")
;; (print d)
;; (print (len d))
;; (rem d "nate")
;; (print d)
;; (rem d "john")
;; (print d)
;; (print (get d "john"))

;; LISTS
(def xs '(1 2 3 4 5))
(print (len xs))
(set! xs (ins xs 0))
(print xs)
(set! xs (ins-at xs 6 7))
(print xs)
(print (get xs 3))
(print (rem xs 8))
(print (rem-at xs 6))
